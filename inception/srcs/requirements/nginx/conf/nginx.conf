user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
        server {

		listen 443 ssl;                                    #--------------->	This tells NGINX to accept HTTPS connections on port 443
		ssl_protocols TLSv1.2 TLSv1.3;                     #--------------->	Only allow secure SSL/TLS protocols (versions 1.2 and 1.3)
		ssl_certificate /etc/nginx/ssl/inception.crt;      #--------------->	Path to the SSL certificate file (This is your public certificate that clients use to verify your server)
		ssl_certificate_key /etc/nginx/ssl/inception.key;  #--------------->	Path to the private key file (This is the private key used to decrypt SSL/TLS communications)
		root /var/www/wordpress;                           #--------------->	Specify Document root directory (Where NGINX will look for files to serve)
		server_name oumondad.42.fr;                        #--------------->	Domain name. This server block responds to Requests for Username.42.fr and will be handled by this block
		index index.php;                                   #--------------->	Default files to look for when a directory is requested (NGINX will try these files in order when serving directory requests)
		location / {                                       #--------------->	Location block for handling requests to the root path (/)
			try_files $uri $uri/ =404;                     #--------------->	Try to serve the exact URI, then URI/, then show 404 error (This is the standard way to serve static files)
		}
		location ~ \.php$ {								  	
			include snippets/fastcgi-php.conf;				#|----> This part is to enable NginX to process PHP Files. It tells Nginx to pass those requests to the PHP-FPM service running in the Wordpress container on port 9000;
			fastcgi_pass wordpress:9000;				  	#|    > It knows how to do this (fastcgi_pass) by including the fastcgi-php.conf file which tells Nginx how to handle PHP processing. 
		}	
	}
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}